name: "leonardo_dev"

services:
  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=leonardo
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/mongo_pass
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    secrets:
      - mongo_pass

  frontend:
    image: node:latest
    working_dir: /app
    command: /bin/bash -c "npm install; npm run dev"
    volumes:
      - ./leonardo/:/app
      - www_leonardo:/build
    expose:
      - 5173
    ports:
      - 5173:5173

  backend:
    build:
      context: flask
    stop_signal: SIGINT
    environment:
      - MONGO_USER=leonardo
      - MONGO_PASSWORD_FILE=/run/secrets/mongo_pass
      - SECRET_KEY_FILE=/run/secrets/secret_key
      - DEBUG=false
      - FLASK_PORT=1337
      - GOOGLE_CLIENT_ID_FILE=/run/secrets/google_oauth_client
      - GOOGLE_CLIENT_SECRET_FILE=/run/secrets/google_oauth_secrets

    volumes:
      - ./flask:/app
    expose:
      - 1337
    ports:
      - 1337:1337
    depends_on:
      mongodb:
        condition: service_healthy
    secrets:
      - mongo_pass
      - secret_key
      - google_oauth_secrets
      - google_oauth_client
  web:
    image: nginx
    environment:
      - DOMANIN=leonardo.racherom.wtf
      - BACKEND_ADDR=backend:1447
    volumes:
      - www_leonardo:/var/www/leonardo
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
    command: "nginx -g 'daemon off;'"
    ports:
      - 80:8080
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started

volumes:
  www_leonardo:

  mongodb_data:

  ssl_certificates:


networks:
  leonardo:


secrets:
  secret_key:
    file: secrets/secret_key
  mongo_pass:
    file: secrets/mongodb_password
  google_oauth_secrets:
    file: secrets/google_oauth_client_secret
  google_oauth_client:
    file: secrets/google_oauth_client_id
